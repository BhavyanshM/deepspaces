<!doctype html>
<html>
  <head>
	  <% include partials/head %>
	  <link rel="stylesheet" href="stylesheets/buttons.css">
	  <link rel="stylesheet" href="stylesheets/sidebar.css">
	  <link rel="stylesheet" href="stylesheets/chat.css">
  </head>
  <body>
	  <% include partials/header %>
	  <div class="container row window">
	    <div class="col-lg-2 side-bar">
		    <div class="list-group">
		      <a href="#dropdown-users" class="list-group-item" data-toggle="collapse">Users <span class="caret"></span></a>
		      <div class="collapse" id="dropdown-users">
			      <a class="list-group-item list-group-item-info">User1 <span class="badge badge-default">5</span></a>
			      <% users.forEach(function(user) { %>
              <% user = decodeURIComponent(user); %>
			        <a class="list-group-item list-group-item-danger"
              onclick="makePrivate('<%= user %>')" id="<%= user %>"><%= user %></a>
			      <% }) %>
		      </div>
		      <a href="#dropdown-rooms" class="list-group-item" data-toggle="collapse">Rooms <span class="caret"></span></a>
		      <div class="collapse" id="dropdown-rooms">
			      <a class="list-group-item list-group-item-info"
            onclick="changeRoom('general')">general <span class="badge badge-danger">0</span></a>
            <% rooms.forEach(function(room) { %>
              <a class="list-group-item list-group-item-info"
                 onclick="changeRoom('<%= room %>')"><%= room %> </a>
            <% }) %>
		      </div>
		    </div>
        <div class="row form-group">
          <div class="col-lg-12">
            <div class="input-group">
              <input id="r" type="text" class="form-control">
              <span class="input-group_btn">
		            <button id="add_room" type="button" class="btn btn-labeled btn-success"><span class="btn-label"><i class="glyphicon glyphicon-ok"></i></span>New Room</button>
              </span>
            </div>
          </div>
        </div>
	    </div>

	    <div class="col-lg-10 chat">
		    <div class="panel-group" id="messages">
		    </div>
      
		    <form onSubmit="sendMsg(); return false;">
		      <div class="row form-group">
			      <div class="col-lg-12">
			        <div class="input-group">
				        <input id="m" type="text" class="form-control">
				          <span class="input-group-btn">
				            <button class="btn btn-default" type="button" onclick="sendMsg()">Send <i class="glyphicon glyphicon-send"></i></button>
				          </span>
			        </div>
			      </div>
		      </div>
		    </form>
	    </div>
	  </div>

    <script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.3/jquery.min.js"></script>
	
	  <script>
	    $(document).ready(function() {
		    $("#add_room").click(function(e) {
		      e.preventDefault();
          const room = $("#r").val();
          if (room === "") return console.log("no room name entered");

          $("#r").val("");
		      const payload = {group_id: "<%= group_id %>", room: room};
		      console.log(payload);
          $.ajax({
			      type: 'POST',
			      url: 'groups/add_room',
			      dataType: 'json',
			      data: JSON.stringify(payload),
			      success: function(result, status, xhr) {
			        location.reload();
			      },
			      error: function(xhr, status, error) {
			        console.log(error);
			      },
			      contentType: 'application/json'
		      });
		    });
	    })
	  </script>

	  <script src="/socket.io/socket.io.js"></script>

	  <script>
	    const params = (new URL(location)).searchParams;
      console.log(params.get('room'));
	    const socket = io({query: {group: '<%= group_id %>', room: params.get('room'), email: "<%= email %>"}});

      function changeRoom(room) {
        console.log("Changing room to", room);
        let newUrl = replaceUrlParam(window.location.href, "room", room);
        newUrl = replaceUrlParam(newUrl, "private", "false");
        window.location.href = newUrl;
      }

      function makePrivate(email) {
        console.log("Making private chat with:", email);
        email = encodeURIComponent(email);
        let newUrl = replaceUrlParam(window.location.href, "room", email);
        newUrl = replaceUrlParam(newUrl, "private", "true");
        window.location.href = newUrl;
      }

      function replaceUrlParam(url, paramName, paramValue) {
        if(paramValue == null)
          paramValue = '';
        var pattern = new RegExp('\\b('+paramName+'=).*?(&|$)')
        if(url.search(pattern)>=0) {
          return url.replace(pattern,'$1' + paramValue + '$2');
        }

        url = url.replace(/\?$/,'');
        return url + (url.indexOf('?')>0 ? '&' : '?') + paramName + '=' + paramValue 
      }

	    function sendMsg() {
		    const message = document.getElementById('m').value;
		    if (message == '') return;
		    const date = new Date();
		    const gossip = {group: '<%= group_id %>', room: params.get('room'), email: '<%= email %>', time: date.toString(), message: message};
        if (params.get('private').toString() == "false") {
		      const gossip = {group: '<%= group_id %>', room: params.get('room'), email: '<%= email %>', time: date.toString(), message: message};
		      socket.emit('message', gossip);
        } else {
          let socket_id = -99;
          //let clients = io.of('/').clients();
          //for (let client in clients) {
          //  console.log(client);
          //}
		      const gossip = {group: '<%= group_id %>', id: '1234', room: params.get('room'), email: '<%= email %>', time: date.toString(), message: message};
          socket.emit('private', gossip);
        }

		    document.getElementById('m').value = "";
	    }

	    function displayMsg(msg) {
		    document.getElementById('messages').innerHTML += '<div class="panel panel-default">' + '<div class="panel-heading">'+ msg.email + '</div>' + '<div class="panel-body">' + msg.message + '</div>' + '</div>';
	    }

	    function addUser(email) {
		    document.getElementById('dropdown-users').innerHTML += '<a class="list-group-item list-group-item-success">' + email + '</a>';
	    }

	    socket.on("join", function(email) {
		    console.log(email, "has joined the room");
		    addUser(email);
	    });

	    socket.on("online", function(email) {
        email = decodeURIComponent(email);
		    console.log(email, "is online");
		    let user = document.getElementById(email);
		    user.setAttribute('class', 'list-group-item list-group-item-success');
	    });

	    socket.on("offline", function(email) {
        email = decodeURIComponent(email);
		    console.log(email, "is offline");
		    let user = document.getElementById(email);
		    user.setAttribute('class', 'list-group-item list-group-item-danger');
	    });

	    socket.on("message", function(msg) {
		    displayMsg(msg);
	    });

      socket.on("private", function(msg) {
        displayMsg(msg);
      });

	    socket.on("history", function(gossip) {
		    for (let i = 0; i < gossip.length; i++) {
		      displayMsg(gossip[i]);
		    }
	    });

	  </script>

  </body>
</html>
